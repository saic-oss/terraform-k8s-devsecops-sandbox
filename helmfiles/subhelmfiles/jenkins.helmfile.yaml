{{- $gitlabHostName := requiredEnv "GITLAB_GITLAB_HOST_NAME" }}
{{- $gitlabApiToken := requiredEnv "GITLAB_API_TOKEN" }}
{{- $jenkinsHostName := requiredEnv "JENKINS_HOST_NAME" }}
{{- $jenkinsId := requiredEnv "JENKINS_ID" }}
{{- $jenkinsSecret := requiredEnv "JENKINS_SECRET" }}
{{- $jenkinsAdminEmail := requiredEnv "JENKINS_ADMIN_EMAIL" }}
{{- $initialAdminCredsSecretName := requiredEnv "JENKINS_INITIAL_ADMIN_CREDS_SECRET_NAME" }}
{{- $initialAdminCredsUserKey := requiredEnv "JENKINS_INITIAL_ADMIN_CREDS_USER_KEY" }}
{{- $initialAdminCredsPasswordKey := requiredEnv "JENKINS_INITIAL_ADMIN_CREDS_PASSWORD_KEY" }}
{{- $clusterIssuer := requiredEnv "CLUSTER_ISSUER" }}

repositories:
  - name: "jenkins"
    url: "https://charts.jenkins.io"

missingFileHandler: Error

releases:
  - name: "jenkins"
    namespace: "jenkins"
    labels:
      chart: "jenkins"
      repo: "jenkins"
      namespace: "jenkins"
      vendor: "jenkins"
    chart: "jenkins/jenkins"
    version: "2.17.1"
    wait: true
    atomic: true
    cleanupOnFail: true
    timeout: 1200
    values:
      - master:
          image: "jenkins/jenkins"
          tag: "2.249.3-lts-centos7"
          imagePullPolicy: "IfNotPresent"
          admin:
            existingSecret: {{$initialAdminCredsSecretName | quote}}
            userKey: {{$initialAdminCredsUserKey | quote}}
            passwordKey: {{$initialAdminCredsPasswordKey | quote}}
          resources:
            requests:
              cpu: "50m"
              memory: "256Mi"
            limits:
              cpu: "2"
              memory: "4Gi"
          jenkinsUrl: "https://{{$jenkinsHostName}}"
          jenkinsAdminEmail: {{$jenkinsAdminEmail | quote}}
          installPlugins:
            - kubernetes:1.25.7
            - ace-editor:1.1
            - workflow-job:2.40
            - workflow-aggregator:2.6
            - workflow-cps-global-lib:2.17
            - pipeline-stage-view:2.19
            - credentials-binding:1.24
            - font-awesome-api:5.15.1-1
            - git:4.5.0
            - gitlab-oauth:1.10
            - gitlab-plugin:1.5.13
            - matrix-auth:2.6.4
            - configuration-as-code:1.46
          additionalPlugins:
            - antisamy-markup-formatter:2.1
          initializeOnce: true
          overwritePlugins: true
          enableRawHtmlMarkupFormatter: true
#          scriptApproval:
#            - "method java.util.Base64$Decoder decode java.lang.String"
#            - "new java.lang.String byte[]"
#            - "staticMethod java.util.Base64 getDecoder"
          JCasC:
            enabled: true
            defaultConfig: true
            configScripts:
              welcome-message: |
                jenkins:
                  systemMessage: "Ephemeral Virtual Training Range (EVTR)"
              credentials: |
                credentials:
                  system:
                    domainCredentials:
                      - credentials:
                          - gitLabApiTokenImpl:
                              scope: SYSTEM
                              id: gitlab_token
                              apiToken: "{{$gitlabApiToken}}"
                              description: "Gitlab Token"
                          - usernamePassword:
                              scope: GLOBAL
                              id: gitlab_credentials
                              username: root
                              password: "{{$gitlabApiToken}}"
              gitlab: |
                unclassified:
                  gitlabconnectionconfig:
                    connections:
                      - apiTokenId: gitlab_token
                        clientBuilderId: "autodetect"
                        connectionTimeout: 20
                        ignoreCertificateErrors: true
                        name: "{{$gitlabHostName}}"
                        readTimeout: 10
                        url: "https://{{$gitlabHostName}}"
            securityRealm: |-
              gitLab:
                clientID: "{{$jenkinsId}}"
                clientSecret: "{{$jenkinsSecret}}"
                gitlabApiUri: "https://{{$gitlabHostName}}"
                gitlabWebUri: "https://{{$gitlabHostName}}"
            authorizationStrategy: |-
              projectMatrix:
                permissions:
                - "Overall/Administer:root"
                - "Overall/Read:authenticated"
          sidecars:
            configAutoReload:
              enabled: true
              resources:
                requests:
                  cpu: 50m
                  memory: 50Mi
                limits:
                  cpu: 100m
                  memory: 100Mi
          ingress:
            enabled: true
            paths: []
            apiVersion: "networking.k8s.io/v1beta1"
            labels: {}
            annotations:
              cert-manager.io/cluster-issuer: {{$clusterIssuer | quote}}
              kubernetes.io/ingress.class: "nginx"
              kubernetes.io/ingress.provider: "nginx"
            hostName: {{$jenkinsHostName | quote}}
            tls:
              - secretName: "tls-{{$jenkinsHostName}}"
                hosts:
                  - {{$jenkinsHostName | quote}}
          healthProbeLivenessInitialDelay: 180
        persistence:
          enabled: true
          storageClass: efs
